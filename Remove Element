/*
Given an array and a value, remove all instances of that value in place and return the new length.
The order of elements can be changed. It doesn't matter what you leave beyond the new length.
Solution: (1) swap. order changed
          (2) 2 pointer

*/

public int removeElement_swap(int[] A, int elem) {
    if(A==null||A.length==0){
            return 0;
        }
        int last = A.length-1;
        for(int i=0; i<=last; i++){
            if(A[i]==elem){
                A[i--] = A[last--];
            }
        }
        
        return last+1;
}

public int removeElement_2pointer(int[] A, int elem) {
    if(A==null||A.length==0){
        return 0;
    }
    int index = 0;
    for (int i = 0; i<A.length; i++){
        if (A[i] != elem){
            A[index] = A[i];
            index++;
        }
    }
    return index;
}
