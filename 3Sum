/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
    
Solution: 2 pointers. Time: O(n^2)
*/
public List<List<Integer>> threeSum(int[] num) {
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    
    if(num.length<3) return res;
    
    Arrays.sort(num);
    for (int i = 0; i < num.length - 2; i++){
        int left = i+1;
        int right = num.length - 1;
        while (left < right){
            int cur = num[i] + num[left] + num[right];
            if (cur == 0 ){
                List<Integer> ele = new ArrayList<Integer>();
                ele.add(num[i]);
                ele.add(num[left]);
                ele.add(num[right]);
                res.add(ele);
                left++;
                right--;
                while (left < right && num[left] == num[left-1]){
                    left++;
                }
                while (left < right && num[right] == num[right+1]){
                    right--;
                }
            }else if(cur < 0){
                left++;
            }else{
                right--;
            }
        }
        while (i<num.length - 2 && num[i] == num[i+1]){
            i++;
        }
    }
    return res;
    
}
