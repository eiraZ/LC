/*
Given a string, find the length of the longest substring without repeating characters. 
For example, the longest substring without repeating letters for "abcabcbb" is "abc", which the length is 3. 
For "bbbbb" the longest substring is "b", with the length of 1.

Solution: sliding window. 2 pointers, one for the start, the other is runner. Time: O(n)
*/

public int lengthOfLongestSubstring(String s) {
    if (s.length() == 0) return 0;
    int[] mem = new int[256];
    Arrays.fill(mem, -1);
    mem[s.charAt(0)] = 0;
    int start = 0;
    int i = 1;
    int length = 1;
    for (; i< s.length(); i++){
        if (mem[s.charAt(i)] >=start){
            start = mem[s.charAt(i)] + 1;
        }
        mem[s.charAt(i)] = i;
        length = Math.max(length, i - start + 1);
    }
    return length;
}
