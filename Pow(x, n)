/*
Implement pow(x, n).

Solution: Divide and conquer.
        n> 0, n<0;
        x > 0, x<0
        x^n = x^(n/2) * x^(n/2) if n==even
            = x ^(n/2) * x^(n/2) * x if n ==odd
            
*/
public double pow(double x, int n) {
  
    if (x < 0){
        if (n%2 == 0){
            return pow(-x, n);
        }else{
            return -pos(-x, n);
        }
    }
    if (x ==0 || x == 1 ) return x;
    if(n == 0) return 1.0;
    if (n == 1) return x;
    if (n < 0) return 1.0/(pow(x, -n));
    
    double temp = pow(x, n/2);
    if (n%2 == 0 ) return temp * temp;
    return temp * temp * x;

}
