/*
Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.
Worst case: O(n)
*/

    public boolean search(int[] A, int target) {
        if(A==null||A.length==0){
            return false;
        }
        int left =0;
        int right = A.length-1;
        
        while (left<=right){
            int mid = (left+right)/2;
            if (A[mid]==target){
                return true;
            }
            if(A[mid]>A[left]){
                if (target>=A[left] && target<A[mid]){
                    right = mid-1;
                }else{
                    left = mid + 1;
                }
            }else if (A[mid]<A[left]){
                if (target>A[mid]&&target<=A[right]){
                    left = mid + 1;
                }else{
                    right = mid-1;
                }
            }
            else{
                left++;
            }
        }
        return false;
        
    }
