/*
Given a m x n grid filled with non-negative numbers, 
find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Solution: DP
*/

public int minPathSum(int[][] grid) {
    if(grid.length == 0 || grid[0].length == 0) return 0;
    int[] res = new int[grid[0].length];
    
    res[0] = grid[0][0];
    for (int j = 1; j<grid[0].length; j++){
        res[j] =  res[j-1] + grid[0][j]; 
    }
    for (int i = 1; i < grid.length; i++){
        res[0] += grid[i][0];
        for (int j = 1; j<grid[0].length; j++){
            res[j] = Math.min(res[j-1], res[j]) + grid[i][j];
        }
    }
    return res[grid[0].length - 1];
    
}
